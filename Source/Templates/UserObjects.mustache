/*
* This file is generated by ReflCompiler
*/
#include "Base/Object.hpp"
#include "Reflection/Type.hpp"
#include "Reflection/Registration.hpp"

using namespace EngineS;

#ifndef _Bool
#define _Bool bool // NOLINT
#endif

{{#objects}}
#include "{{filePath}}"
const Type* {{className}}::__es_type =
    Registration::Class<{{className}}>("{{className}}", {{baseName}}::GetTypeStatic())
    {{#methods}}
        .Method("{{methodName}}", static_cast<MethodType<{{className}}, {{#isStatic}}true{{/isStatic}}{{^isStatic}}false{{/isStatic}}, {{#isConst}}true{{/isConst}}{{^isConst}}false{{/isConst}}, {{returnTypeName}}{{#params}}, {{typeName}}{{/params}}>>(&{{className}}::{{methodName}}), { {{#params}}{"{{paramName}}"},{{/params}} })
    {{/methods}}
    {{#fields}}
        .Field("{{fieldName}}", &{{className}}::{{fieldName}})
    {{/fields}}
        .Get();

{{/objects}}

#include "Refl.hpp"

void EngineS::Registration::RegisterUserObjects() {
{{#objects}}
    {{className}}::GetTypeStatic();
{{/objects}}
}