/*
 * This file is generated by ReflCompiler
 */
#include "Base/Object.hpp"
#include "Reflection/Type.hpp"
#include "Reflection/Registration.hpp"

using namespace EngineS;

#ifndef _Bool
#define _Bool bool // NOLINT
#endif

#include "Render/Buffer.hpp"
const Type* EngineS::Buffer::__es_type =
    Registration::Class<EngineS::Buffer>("EngineS::Buffer", Object::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::Buffer, true, false, const Type *>>(&EngineS::Buffer::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::Buffer, false, false, const Type *>>(&EngineS::Buffer::GetType), {  })
        .Method("UpdateData", static_cast<MethodType<EngineS::Buffer, false, false, void, const byte *>>(&EngineS::Buffer::UpdateData), { {"data"}, })
        .Field("_size", &EngineS::Buffer::_size)
        .Field("_type", &EngineS::Buffer::_type)
        .Field("_usage", &EngineS::Buffer::_usage)
        .Get();

#include "Render/OpenGL/BufferOpenGL.hpp"
const Type* EngineS::BufferOpenGL::__es_type =
    Registration::Class<EngineS::BufferOpenGL>("EngineS::BufferOpenGL", Buffer::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::BufferOpenGL, true, false, const Type *>>(&EngineS::BufferOpenGL::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::BufferOpenGL, false, false, const Type *>>(&EngineS::BufferOpenGL::GetType), {  })
        .Method("UpdateData", static_cast<MethodType<EngineS::BufferOpenGL, false, false, void, const byte *>>(&EngineS::BufferOpenGL::UpdateData), { {"data"}, })
        .Method("GetHandler", static_cast<MethodType<EngineS::BufferOpenGL, false, true, GLuint>>(&EngineS::BufferOpenGL::GetHandler), {  })
        .Field("_buffer", &EngineS::BufferOpenGL::_buffer)
        .Field("_size", &EngineS::BufferOpenGL::_size)
        .Field("_type", &EngineS::BufferOpenGL::_type)
        .Field("_usage", &EngineS::BufferOpenGL::_usage)
        .Get();

#include "Function/Camera.hpp"
const Type* EngineS::Camera::__es_type =
    Registration::Class<EngineS::Camera>("EngineS::Camera", Component::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::Camera, true, false, const Type *>>(&EngineS::Camera::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::Camera, false, false, const Type *>>(&EngineS::Camera::GetType), {  })
        .Method("Initialize", static_cast<MethodType<EngineS::Camera, false, false, void, GameObject *>>(&EngineS::Camera::Initialize), { {"parent"}, })
        .Method("Update", static_cast<MethodType<EngineS::Camera, false, false, void, float>>(&EngineS::Camera::Update), { {"deltaTime"}, })
        .Method("ConstructProjectionMatrix", static_cast<MethodType<EngineS::Camera, false, false, void>>(&EngineS::Camera::ConstructProjectionMatrix), {  })
        .Method("GetProjectionMatrix", static_cast<MethodType<EngineS::Camera, false, true, const Matrix4x4 &>>(&EngineS::Camera::GetProjectionMatrix), {  })
        .Method("GetViewMatrix", static_cast<MethodType<EngineS::Camera, false, true, Matrix4x4>>(&EngineS::Camera::GetViewMatrix), {  })
        .Field("width", &EngineS::Camera::width)
        .Field("height", &EngineS::Camera::height)
        .Field("near", &EngineS::Camera::near)
        .Field("far", &EngineS::Camera::far)
        .Field("_projMat", &EngineS::Camera::_projMat)
        .Get();

#include "Function/Component.hpp"
const Type* EngineS::Component::__es_type =
    Registration::Class<EngineS::Component>("EngineS::Component", Object::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::Component, true, false, const Type *>>(&EngineS::Component::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::Component, false, false, const Type *>>(&EngineS::Component::GetType), {  })
        .Method("Initialize", static_cast<MethodType<EngineS::Component, false, false, void, GameObject *>>(&EngineS::Component::Initialize), { {"parent"}, })
        .Method("Update", static_cast<MethodType<EngineS::Component, false, false, void, float>>(&EngineS::Component::Update), { {"deltaTime"}, })
        .Method("SetEnabled", static_cast<MethodType<EngineS::Component, false, false, void, _Bool>>(&EngineS::Component::SetEnabled), { {"value"}, })
        .Method("GetEnabled", static_cast<MethodType<EngineS::Component, false, true, _Bool>>(&EngineS::Component::GetEnabled), {  })
        .Method("GetGameObject", static_cast<MethodType<EngineS::Component, false, true, GameObject *>>(&EngineS::Component::GetGameObject), {  })
        .Method("GetComponent", static_cast<MethodType<EngineS::Component, false, true, Component *, const Type *>>(&EngineS::Component::GetComponent), { {"type"}, })
        .Method("GetComponents", static_cast<MethodType<EngineS::Component, false, true, std::vector<Component *>, const Type *>>(&EngineS::Component::GetComponents), { {"type"}, })
        .Field("_enabled", &EngineS::Component::_enabled)
        .Field("_gameObject", &EngineS::Component::_gameObject)
        .Get();

#include "Render/DrawList.hpp"
const Type* EngineS::DrawList::__es_type =
    Registration::Class<EngineS::DrawList>("EngineS::DrawList", Object::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::DrawList, true, false, const Type *>>(&EngineS::DrawList::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::DrawList, false, false, const Type *>>(&EngineS::DrawList::GetType), {  })
        .Method("Begin", static_cast<MethodType<EngineS::DrawList, false, false, void, const RenderPassDescriptor &>>(&EngineS::DrawList::Begin), { {"desc"}, })
        .Method("SetViewport", static_cast<MethodType<EngineS::DrawList, false, false, void, i32, i32, u32, u32>>(&EngineS::DrawList::SetViewport), { {"x"},{"y"},{"w"},{"h"}, })
        .Method("BindRenderPipeline", static_cast<MethodType<EngineS::DrawList, false, false, void, const RenderPipeline *>>(&EngineS::DrawList::BindRenderPipeline), { {"pipeline"}, })
        .Method("BindVertexBuffer", static_cast<MethodType<EngineS::DrawList, false, false, void, const Buffer *>>(&EngineS::DrawList::BindVertexBuffer), { {"buffer"}, })
        .Method("BindTexture", static_cast<MethodType<EngineS::DrawList, false, false, void, const Texture2D *>>(&EngineS::DrawList::BindTexture), { {"texture"}, })
        .Method("Draw", static_cast<MethodType<EngineS::DrawList, false, false, void, std::size_t, std::size_t>>(&EngineS::DrawList::Draw), { {"start"},{"count"}, })
        .Method("End", static_cast<MethodType<EngineS::DrawList, false, false, void>>(&EngineS::DrawList::End), {  })
        .Get();

#include "Render/OpenGL/DrawListOpenGL.hpp"
const Type* EngineS::DrawListOpenGL::__es_type =
    Registration::Class<EngineS::DrawListOpenGL>("EngineS::DrawListOpenGL", DrawList::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::DrawListOpenGL, true, false, const Type *>>(&EngineS::DrawListOpenGL::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::DrawListOpenGL, false, false, const Type *>>(&EngineS::DrawListOpenGL::GetType), {  })
        .Method("Begin", static_cast<MethodType<EngineS::DrawListOpenGL, false, false, void, const RenderPassDescriptor &>>(&EngineS::DrawListOpenGL::Begin), { {"desc"}, })
        .Method("SetViewport", static_cast<MethodType<EngineS::DrawListOpenGL, false, false, void, i32, i32, u32, u32>>(&EngineS::DrawListOpenGL::SetViewport), { {"x"},{"y"},{"w"},{"h"}, })
        .Method("BindRenderPipeline", static_cast<MethodType<EngineS::DrawListOpenGL, false, false, void, const RenderPipeline *>>(&EngineS::DrawListOpenGL::BindRenderPipeline), { {"pipeline"}, })
        .Method("BindVertexBuffer", static_cast<MethodType<EngineS::DrawListOpenGL, false, false, void, const Buffer *>>(&EngineS::DrawListOpenGL::BindVertexBuffer), { {"buffer"}, })
        .Method("BindTexture", static_cast<MethodType<EngineS::DrawListOpenGL, false, false, void, const Texture2D *>>(&EngineS::DrawListOpenGL::BindTexture), { {"texture"}, })
        .Method("Draw", static_cast<MethodType<EngineS::DrawListOpenGL, false, false, void, std::size_t, std::size_t>>(&EngineS::DrawListOpenGL::Draw), { {"start"},{"count"}, })
        .Method("End", static_cast<MethodType<EngineS::DrawListOpenGL, false, false, void>>(&EngineS::DrawListOpenGL::End), {  })
        .Field("_pipeline", &EngineS::DrawListOpenGL::_pipeline)
        .Field("_framebuffer", &EngineS::DrawListOpenGL::_framebuffer)
        .Get();

#include "Engine/Engine.hpp"
const Type* EngineS::Engine::__es_type =
    Registration::Class<EngineS::Engine>("EngineS::Engine", Object::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::Engine, true, false, const Type *>>(&EngineS::Engine::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::Engine, false, false, const Type *>>(&EngineS::Engine::GetType), {  })
        .Method("Instance", static_cast<MethodType<EngineS::Engine, true, false, Engine *>>(&EngineS::Engine::Instance), {  })
        .Method("StartEngine", static_cast<MethodType<EngineS::Engine, false, false, void>>(&EngineS::Engine::StartEngine), {  })
        .Method("Shutdown", static_cast<MethodType<EngineS::Engine, false, false, void>>(&EngineS::Engine::Shutdown), {  })
        .Method("Run", static_cast<MethodType<EngineS::Engine, false, false, void>>(&EngineS::Engine::Run), {  })
        .Method("GetFPS", static_cast<MethodType<EngineS::Engine, false, true, int>>(&EngineS::Engine::GetFPS), {  })
        .Method("RegisterUpdateFunc", static_cast<MethodType<EngineS::Engine, false, false, void, UpdateFunc>>(&EngineS::Engine::RegisterUpdateFunc), { {"func"}, })
        .Method("GetDeltaTime", static_cast<MethodType<EngineS::Engine, false, false, float>>(&EngineS::Engine::GetDeltaTime), {  })
        .Method("Update", static_cast<MethodType<EngineS::Engine, false, false, void, float>>(&EngineS::Engine::Update), { {"deltaTime"}, })
        .Method("LogicUpdate", static_cast<MethodType<EngineS::Engine, false, false, void, float>>(&EngineS::Engine::LogicUpdate), { {"deltaTime"}, })
        .Method("RenderUpdate", static_cast<MethodType<EngineS::Engine, false, false, void>>(&EngineS::Engine::RenderUpdate), {  })
        .Field("_fpsCalculator", &EngineS::Engine::_fpsCalculator)
        .Field("_lastTickTime", &EngineS::Engine::_lastTickTime)
        .Field("_updateFuncs", &EngineS::Engine::_updateFuncs)
        .Field("_shouldShutdown", &EngineS::Engine::_shouldShutdown)
        .Get();

#include "Render/Framebuffer.hpp"
const Type* EngineS::Framebuffer::__es_type =
    Registration::Class<EngineS::Framebuffer>("EngineS::Framebuffer", Object::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::Framebuffer, true, false, const Type *>>(&EngineS::Framebuffer::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::Framebuffer, false, false, const Type *>>(&EngineS::Framebuffer::GetType), {  })
        .Method("GetColorAttachment", static_cast<MethodType<EngineS::Framebuffer, false, true, Texture2D *, u32>>(&EngineS::Framebuffer::GetColorAttachment), { {"index"}, })
        .Method("GetDepthAttachment", static_cast<MethodType<EngineS::Framebuffer, false, true, Texture2D *>>(&EngineS::Framebuffer::GetDepthAttachment), {  })
        .Field("_colorAttachments", &EngineS::Framebuffer::_colorAttachments)
        .Field("_depthAttachment", &EngineS::Framebuffer::_depthAttachment)
        .Get();

#include "Render/OpenGL/FramebufferOpenGL.hpp"
const Type* EngineS::FramebufferOpenGL::__es_type =
    Registration::Class<EngineS::FramebufferOpenGL>("EngineS::FramebufferOpenGL", Framebuffer::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::FramebufferOpenGL, true, false, const Type *>>(&EngineS::FramebufferOpenGL::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::FramebufferOpenGL, false, false, const Type *>>(&EngineS::FramebufferOpenGL::GetType), {  })
        .Method("GetHandler", static_cast<MethodType<EngineS::FramebufferOpenGL, false, true, GLuint>>(&EngineS::FramebufferOpenGL::GetHandler), {  })
        .Field("_fbo", &EngineS::FramebufferOpenGL::_fbo)
        .Get();

#include "Function/GameObject.hpp"
const Type* EngineS::GameObject::__es_type =
    Registration::Class<EngineS::GameObject>("EngineS::GameObject", Object::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::GameObject, true, false, const Type *>>(&EngineS::GameObject::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::GameObject, false, false, const Type *>>(&EngineS::GameObject::GetType), {  })
        .Method("Update", static_cast<MethodType<EngineS::GameObject, false, false, void, float>>(&EngineS::GameObject::Update), { {"deltaTime"}, })
        .Method("AddComponent", static_cast<MethodType<EngineS::GameObject, false, false, Component *, const Type *>>(&EngineS::GameObject::AddComponent), { {"type"}, })
        .Method("GetComponent", static_cast<MethodType<EngineS::GameObject, false, true, Component *, const Type *>>(&EngineS::GameObject::GetComponent), { {"type"}, })
        .Method("GetComponents", static_cast<MethodType<EngineS::GameObject, false, true, std::vector<Component *>, const Type *>>(&EngineS::GameObject::GetComponents), { {"type"}, })
        .Field("_components", &EngineS::GameObject::_components)
        .Get();

#include "Function/InputSystem.hpp"
const Type* EngineS::InputSystem::__es_type =
    Registration::Class<EngineS::InputSystem>("EngineS::InputSystem", Object::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::InputSystem, true, false, const Type *>>(&EngineS::InputSystem::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::InputSystem, false, false, const Type *>>(&EngineS::InputSystem::GetType), {  })
        .Method("Instance", static_cast<MethodType<EngineS::InputSystem, true, false, InputSystem *>>(&EngineS::InputSystem::Instance), {  })
        .Method("Initialize", static_cast<MethodType<EngineS::InputSystem, false, false, void>>(&EngineS::InputSystem::Initialize), {  })
        .Method("Update", static_cast<MethodType<EngineS::InputSystem, false, false, void>>(&EngineS::InputSystem::Update), {  })
        .Method("GetKey", static_cast<MethodType<EngineS::InputSystem, false, false, _Bool, KeyCode>>(&EngineS::InputSystem::GetKey), { {"key"}, })
        .Method("GetKeyDown", static_cast<MethodType<EngineS::InputSystem, false, false, _Bool, KeyCode>>(&EngineS::InputSystem::GetKeyDown), { {"key"}, })
        .Method("GetKeyUp", static_cast<MethodType<EngineS::InputSystem, false, false, _Bool, KeyCode>>(&EngineS::InputSystem::GetKeyUp), { {"key"}, })
        .Method("OnKey", static_cast<MethodType<EngineS::InputSystem, false, false, void, int, int, int, int>>(&EngineS::InputSystem::OnKey), { {"key"},{"scanCode"},{"action"},{"mods"}, })
        .Field("_keys", &EngineS::InputSystem::_keys)
        .Get();

#include "IO/Logger.hpp"
const Type* EngineS::Logger::__es_type =
    Registration::Class<EngineS::Logger>("EngineS::Logger", Object::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::Logger, true, false, const Type *>>(&EngineS::Logger::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::Logger, false, false, const Type *>>(&EngineS::Logger::GetType), {  })
        .Method("Instance", static_cast<MethodType<EngineS::Logger, true, false, Logger *>>(&EngineS::Logger::Instance), {  })
        .Method("GetPrefix", static_cast<MethodType<EngineS::Logger, true, false, std::string, LogLevel, std::source_location>>(&EngineS::Logger::GetPrefix), { {"level"},{"location"}, })
        .Method("Log", static_cast<MethodType<EngineS::Logger, false, false, void, LogLevel, std::string, std::source_location>>(&EngineS::Logger::Log), { {"level"},{"message"},{"location"}, })
        .Method("Open", static_cast<MethodType<EngineS::Logger, false, false, void, const std::filesystem::path &>>(&EngineS::Logger::Open), { {"filePath"}, })
        .Method("Close", static_cast<MethodType<EngineS::Logger, false, false, void>>(&EngineS::Logger::Close), {  })
        .Method("SetLevel", static_cast<MethodType<EngineS::Logger, false, false, void, LogLevel>>(&EngineS::Logger::SetLevel), { {"level"}, })
        .Method("GetLevel", static_cast<MethodType<EngineS::Logger, false, true, LogLevel>>(&EngineS::Logger::GetLevel), {  })
        .Field("_level", &EngineS::Logger::_level)
        .Field("_logFile", &EngineS::Logger::_logFile)
        .Get();

#include "Render/Material2D.hpp"
const Type* EngineS::Material2D::__es_type =
    Registration::Class<EngineS::Material2D>("EngineS::Material2D", Object::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::Material2D, true, false, const Type *>>(&EngineS::Material2D::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::Material2D, false, false, const Type *>>(&EngineS::Material2D::GetType), {  })
        .Method("GetProgram", static_cast<MethodType<EngineS::Material2D, false, true, Program *>>(&EngineS::Material2D::GetProgram), {  })
        .Method("GetTexture", static_cast<MethodType<EngineS::Material2D, false, true, Texture2D *>>(&EngineS::Material2D::GetTexture), {  })
        .Field("_program", &EngineS::Material2D::_program)
        .Field("_texture", &EngineS::Material2D::_texture)
        .Get();

#include "Render/Program.hpp"
const Type* EngineS::Program::__es_type =
    Registration::Class<EngineS::Program>("EngineS::Program", Resource::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::Program, true, false, const Type *>>(&EngineS::Program::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::Program, false, false, const Type *>>(&EngineS::Program::GetType), {  })
        .Method("Load", static_cast<MethodType<EngineS::Program, false, false, _Bool, const std::filesystem::path &>>(&EngineS::Program::Load), { {"path"}, })
        .Method("Link", static_cast<MethodType<EngineS::Program, false, false, _Bool, Shader *, Shader *>>(&EngineS::Program::Link), { {"fragShader"},{"vertShader"}, })
        .Get();

#include "Render/OpenGL/ProgramOpenGL.hpp"
const Type* EngineS::ProgramOpenGL::__es_type =
    Registration::Class<EngineS::ProgramOpenGL>("EngineS::ProgramOpenGL", Program::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::ProgramOpenGL, true, false, const Type *>>(&EngineS::ProgramOpenGL::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::ProgramOpenGL, false, false, const Type *>>(&EngineS::ProgramOpenGL::GetType), {  })
        .Method("Link", static_cast<MethodType<EngineS::ProgramOpenGL, false, false, _Bool, Shader *, Shader *>>(&EngineS::ProgramOpenGL::Link), { {"fragShader"},{"vertShader"}, })
        .Method("GetHandler", static_cast<MethodType<EngineS::ProgramOpenGL, false, true, GLuint>>(&EngineS::ProgramOpenGL::GetHandler), {  })
        .Field("_program", &EngineS::ProgramOpenGL::_program)
        .Get();

#include "Render/RenderPipeline.hpp"
const Type* EngineS::RenderPipeline::__es_type =
    Registration::Class<EngineS::RenderPipeline>("EngineS::RenderPipeline", Object::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::RenderPipeline, true, false, const Type *>>(&EngineS::RenderPipeline::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::RenderPipeline, false, false, const Type *>>(&EngineS::RenderPipeline::GetType), {  })
        .Method("GetProgram", static_cast<MethodType<EngineS::RenderPipeline, false, true, Program *>>(&EngineS::RenderPipeline::GetProgram), {  })
        .Method("SetProgram", static_cast<MethodType<EngineS::RenderPipeline, false, false, void, Program *>>(&EngineS::RenderPipeline::SetProgram), { {"p"}, })
        .Method("GetVertexLayout", static_cast<MethodType<EngineS::RenderPipeline, false, true, const VertexLayout &>>(&EngineS::RenderPipeline::GetVertexLayout), {  })
        .Method("GetRenderPrimitive", static_cast<MethodType<EngineS::RenderPipeline, false, true, RenderPrimitive>>(&EngineS::RenderPipeline::GetRenderPrimitive), {  })
        .Field("_program", &EngineS::RenderPipeline::_program)
        .Field("_vertexLayout", &EngineS::RenderPipeline::_vertexLayout)
        .Field("_renderPrimitive", &EngineS::RenderPipeline::_renderPrimitive)
        .Get();

#include "Render/OpenGL/RenderPipelineOpenGL.hpp"
const Type* EngineS::RenderPipelineOpenGL::__es_type =
    Registration::Class<EngineS::RenderPipelineOpenGL>("EngineS::RenderPipelineOpenGL", RenderPipeline::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::RenderPipelineOpenGL, true, false, const Type *>>(&EngineS::RenderPipelineOpenGL::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::RenderPipelineOpenGL, false, false, const Type *>>(&EngineS::RenderPipelineOpenGL::GetType), {  })
        .Get();

#include "Render/RenderSystem.hpp"
const Type* EngineS::RenderSystem::__es_type =
    Registration::Class<EngineS::RenderSystem>("EngineS::RenderSystem", Object::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::RenderSystem, true, false, const Type *>>(&EngineS::RenderSystem::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::RenderSystem, false, false, const Type *>>(&EngineS::RenderSystem::GetType), {  })
        .Method("Instance", static_cast<MethodType<EngineS::RenderSystem, true, false, RenderSystem *>>(&EngineS::RenderSystem::Instance), {  })
        .Method("Initialize", static_cast<MethodType<EngineS::RenderSystem, false, false, void>>(&EngineS::RenderSystem::Initialize), {  })
        .Method("Update", static_cast<MethodType<EngineS::RenderSystem, false, false, void>>(&EngineS::RenderSystem::Update), {  })
        .Method("OnWindowSizeChange", static_cast<MethodType<EngineS::RenderSystem, false, false, void, u32, u32>>(&EngineS::RenderSystem::OnWindowSizeChange), { {"width"},{"height"}, })
        .Field("_deviceInfo", &EngineS::RenderSystem::_deviceInfo)
        .Field("_framebuffer", &EngineS::RenderSystem::_framebuffer)
        .Field("_colorTex", &EngineS::RenderSystem::_colorTex)
        .Field("_depthTex", &EngineS::RenderSystem::_depthTex)
        .Get();

#include "Render/Renderer.hpp"
const Type* EngineS::Renderer::__es_type =
    Registration::Class<EngineS::Renderer>("EngineS::Renderer", Component::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::Renderer, true, false, const Type *>>(&EngineS::Renderer::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::Renderer, false, false, const Type *>>(&EngineS::Renderer::GetType), {  })
        .Method("Render", static_cast<MethodType<EngineS::Renderer, false, false, void, const Matrix4x4 &, DrawList *>>(&EngineS::Renderer::Render), { {"modelMat"},{"drawList"}, })
        .Get();

#include "Resource/Resource.hpp"
const Type* EngineS::Resource::__es_type =
    Registration::Class<EngineS::Resource>("EngineS::Resource", Object::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::Resource, true, false, const Type *>>(&EngineS::Resource::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::Resource, false, false, const Type *>>(&EngineS::Resource::GetType), {  })
        .Method("Load", static_cast<MethodType<EngineS::Resource, false, false, _Bool, const std::filesystem::path &>>(&EngineS::Resource::Load), { {"path"}, })
        .Get();

#include "Resource/ResourceManager.hpp"
const Type* EngineS::ResourceManager::__es_type =
    Registration::Class<EngineS::ResourceManager>("EngineS::ResourceManager", Object::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::ResourceManager, true, false, const Type *>>(&EngineS::ResourceManager::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::ResourceManager, false, false, const Type *>>(&EngineS::ResourceManager::GetType), {  })
        .Method("Instance", static_cast<MethodType<EngineS::ResourceManager, true, false, ResourceManager *>>(&EngineS::ResourceManager::Instance), {  })
        .Method("Update", static_cast<MethodType<EngineS::ResourceManager, false, false, void>>(&EngineS::ResourceManager::Update), {  })
        .Method("Load", static_cast<MethodType<EngineS::ResourceManager, false, false, Resource *, const Type *, const std::filesystem::path &>>(&EngineS::ResourceManager::Load), { {"type"},{"path"}, })
        .Method("AddResourceDir", static_cast<MethodType<EngineS::ResourceManager, false, false, _Bool, const std::filesystem::path &>>(&EngineS::ResourceManager::AddResourceDir), { {"path"}, })
        .Method("FindResourcePath", static_cast<MethodType<EngineS::ResourceManager, false, true, std::optional<std::filesystem::path>, const std::filesystem::path &>>(&EngineS::ResourceManager::FindResourcePath), { {"path"}, })
        .Method("SetAutoReload", static_cast<MethodType<EngineS::ResourceManager, false, false, void, _Bool>>(&EngineS::ResourceManager::SetAutoReload), { {"value"}, })
        .Field("_resources", &EngineS::ResourceManager::_resources)
        .Field("_resourceDirs", &EngineS::ResourceManager::_resourceDirs)
        .Field("_autoReloadEnabled", &EngineS::ResourceManager::_autoReloadEnabled)
        .Get();

#include "Function/Scene.hpp"
const Type* EngineS::Scene::__es_type =
    Registration::Class<EngineS::Scene>("EngineS::Scene", Object::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::Scene, true, false, const Type *>>(&EngineS::Scene::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::Scene, false, false, const Type *>>(&EngineS::Scene::GetType), {  })
        .Method("Initialize", static_cast<MethodType<EngineS::Scene, false, false, void>>(&EngineS::Scene::Initialize), {  })
        .Method("GetGameObjects", static_cast<MethodType<EngineS::Scene, false, false, std::unordered_set<GameObject *> &>>(&EngineS::Scene::GetGameObjects), {  })
        .Method("AddGameObject", static_cast<MethodType<EngineS::Scene, false, false, void, GameObject *>>(&EngineS::Scene::AddGameObject), { {"gameObject"}, })
        .Method("AddGameObject", static_cast<MethodType<EngineS::Scene, false, false, void, GameObject *, Transform2D *>>(&EngineS::Scene::AddGameObject), { {"gameObject"},{"parent"}, })
        .Method("RemoveGameObject", static_cast<MethodType<EngineS::Scene, false, false, void, GameObject *>>(&EngineS::Scene::RemoveGameObject), { {"gameObject"}, })
        .Method("GetMainCamera", static_cast<MethodType<EngineS::Scene, false, false, Camera *>>(&EngineS::Scene::GetMainCamera), {  })
        .Method("GetRootTransform", static_cast<MethodType<EngineS::Scene, false, false, Transform2D *>>(&EngineS::Scene::GetRootTransform), {  })
        .Field("_gameObjects", &EngineS::Scene::_gameObjects)
        .Field("_mainCamera", &EngineS::Scene::_mainCamera)
        .Field("_rootGameObject", &EngineS::Scene::_rootGameObject)
        .Get();

#include "Function/SceneManager.hpp"
const Type* EngineS::SceneManager::__es_type =
    Registration::Class<EngineS::SceneManager>("EngineS::SceneManager", Object::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::SceneManager, true, false, const Type *>>(&EngineS::SceneManager::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::SceneManager, false, false, const Type *>>(&EngineS::SceneManager::GetType), {  })
        .Method("Instance", static_cast<MethodType<EngineS::SceneManager, true, false, SceneManager *>>(&EngineS::SceneManager::Instance), {  })
        .Method("Initialize", static_cast<MethodType<EngineS::SceneManager, false, false, void>>(&EngineS::SceneManager::Initialize), {  })
        .Method("SetCurrentScene", static_cast<MethodType<EngineS::SceneManager, false, false, void, Scene *>>(&EngineS::SceneManager::SetCurrentScene), { {"scene"}, })
        .Method("GetCurrentScene", static_cast<MethodType<EngineS::SceneManager, false, false, Scene *>>(&EngineS::SceneManager::GetCurrentScene), {  })
        .Field("_currentScene", &EngineS::SceneManager::_currentScene)
        .Get();

#include "Render/Shader.hpp"
const Type* EngineS::Shader::__es_type =
    Registration::Class<EngineS::Shader>("EngineS::Shader", Object::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::Shader, true, false, const Type *>>(&EngineS::Shader::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::Shader, false, false, const Type *>>(&EngineS::Shader::GetType), {  })
        .Method("Compile", static_cast<MethodType<EngineS::Shader, false, false, _Bool, ShaderStage, const std::string &>>(&EngineS::Shader::Compile), { {"stage"},{"src"}, })
        .Method("Compile", static_cast<MethodType<EngineS::Shader, false, false, _Bool, ShaderStage, const std::vector<std::string> &>>(&EngineS::Shader::Compile), { {"stage"},{"src"}, })
        .Method("CompileInternal", static_cast<MethodType<EngineS::Shader, false, false, _Bool, ShaderStage, const char **, std::size_t>>(&EngineS::Shader::CompileInternal), { {"stage"},{"src"},{"size"}, })
        .Field("_stage", &EngineS::Shader::_stage)
        .Get();

#include "Render/OpenGL/ShaderOpenGL.hpp"
const Type* EngineS::ShaderOpenGL::__es_type =
    Registration::Class<EngineS::ShaderOpenGL>("EngineS::ShaderOpenGL", Shader::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::ShaderOpenGL, true, false, const Type *>>(&EngineS::ShaderOpenGL::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::ShaderOpenGL, false, false, const Type *>>(&EngineS::ShaderOpenGL::GetType), {  })
        .Method("GetHandler", static_cast<MethodType<EngineS::ShaderOpenGL, false, true, GLuint>>(&EngineS::ShaderOpenGL::GetHandler), {  })
        .Method("CompileInternal", static_cast<MethodType<EngineS::ShaderOpenGL, false, false, _Bool, ShaderStage, const char **, std::size_t>>(&EngineS::ShaderOpenGL::CompileInternal), { {"stage"},{"src"},{"size"}, })
        .Field("_shader", &EngineS::ShaderOpenGL::_shader)
        .Get();

#include "Render/SpriteRenderer.hpp"
const Type* EngineS::SpriteRenderer::__es_type =
    Registration::Class<EngineS::SpriteRenderer>("EngineS::SpriteRenderer", Renderer::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::SpriteRenderer, true, false, const Type *>>(&EngineS::SpriteRenderer::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::SpriteRenderer, false, false, const Type *>>(&EngineS::SpriteRenderer::GetType), {  })
        .Method("Render", static_cast<MethodType<EngineS::SpriteRenderer, false, false, void, const Matrix4x4 &, DrawList *>>(&EngineS::SpriteRenderer::Render), { {"modelMat"},{"drawList"}, })
        .Method("Initialize", static_cast<MethodType<EngineS::SpriteRenderer, false, false, void, GameObject *>>(&EngineS::SpriteRenderer::Initialize), { {"parent"}, })
        .Method("SetMaterial", static_cast<MethodType<EngineS::SpriteRenderer, false, false, void, Material2D *>>(&EngineS::SpriteRenderer::SetMaterial), { {"material"}, })
        .Method("GetMaterial", static_cast<MethodType<EngineS::SpriteRenderer, false, false, Material2D *>>(&EngineS::SpriteRenderer::GetMaterial), {  })
        .Method("GetAnchor", static_cast<MethodType<EngineS::SpriteRenderer, false, true, const Vector2 &>>(&EngineS::SpriteRenderer::GetAnchor), {  })
        .Method("SetAnchor", static_cast<MethodType<EngineS::SpriteRenderer, false, false, void, const Vector2 &>>(&EngineS::SpriteRenderer::SetAnchor), { {"anchor"}, })
        .Method("GetColor", static_cast<MethodType<EngineS::SpriteRenderer, false, true, const Color4F &>>(&EngineS::SpriteRenderer::GetColor), {  })
        .Method("SetColor", static_cast<MethodType<EngineS::SpriteRenderer, false, false, void, const Color4F &>>(&EngineS::SpriteRenderer::SetColor), { {"color"}, })
        .Field("_material", &EngineS::SpriteRenderer::_material)
        .Field("_color", &EngineS::SpriteRenderer::_color)
        .Field("_anchor", &EngineS::SpriteRenderer::_anchor)
        .Field("_vertexBuffer", &EngineS::SpriteRenderer::_vertexBuffer)
        .Get();

#include "Resource/Impl/Text.hpp"
const Type* EngineS::Text::__es_type =
    Registration::Class<EngineS::Text>("EngineS::Text", Resource::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::Text, true, false, const Type *>>(&EngineS::Text::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::Text, false, false, const Type *>>(&EngineS::Text::GetType), {  })
        .Method("Load", static_cast<MethodType<EngineS::Text, false, false, _Bool, const std::filesystem::path &>>(&EngineS::Text::Load), { {"path"}, })
        .Method("GetText", static_cast<MethodType<EngineS::Text, false, true, const std::string &>>(&EngineS::Text::GetText), {  })
        .Field("_text", &EngineS::Text::_text)
        .Get();

#include "Render/Texture2D.hpp"
const Type* EngineS::Texture2D::__es_type =
    Registration::Class<EngineS::Texture2D>("EngineS::Texture2D", Resource::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::Texture2D, true, false, const Type *>>(&EngineS::Texture2D::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::Texture2D, false, false, const Type *>>(&EngineS::Texture2D::GetType), {  })
        .Method("Load", static_cast<MethodType<EngineS::Texture2D, false, false, _Bool, const std::filesystem::path &>>(&EngineS::Texture2D::Load), { {"path"}, })
        .Method("Init", static_cast<MethodType<EngineS::Texture2D, false, false, void, const TextureDescriptor &>>(&EngineS::Texture2D::Init), { {"desc"}, })
        .Method("UpdateData", static_cast<MethodType<EngineS::Texture2D, false, false, void, const byte *, u32, u32>>(&EngineS::Texture2D::UpdateData), { {"data"},{"width"},{"height"}, })
        .Method("Apply", static_cast<MethodType<EngineS::Texture2D, false, true, void, u32>>(&EngineS::Texture2D::Apply), { {"index"}, })
        .Method("GetWidth", static_cast<MethodType<EngineS::Texture2D, false, true, u32>>(&EngineS::Texture2D::GetWidth), {  })
        .Method("GetHeight", static_cast<MethodType<EngineS::Texture2D, false, true, u32>>(&EngineS::Texture2D::GetHeight), {  })
        .Field("_width", &EngineS::Texture2D::_width)
        .Field("_height", &EngineS::Texture2D::_height)
        .Field("_format", &EngineS::Texture2D::_format)
        .Get();

#include "Render/OpenGL/Texture2DOpenGL.hpp"
const Type* EngineS::Texture2DOpenGL::__es_type =
    Registration::Class<EngineS::Texture2DOpenGL>("EngineS::Texture2DOpenGL", Texture2D::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::Texture2DOpenGL, true, false, const Type *>>(&EngineS::Texture2DOpenGL::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::Texture2DOpenGL, false, false, const Type *>>(&EngineS::Texture2DOpenGL::GetType), {  })
        .Method("Init", static_cast<MethodType<EngineS::Texture2DOpenGL, false, false, void, const TextureDescriptor &>>(&EngineS::Texture2DOpenGL::Init), { {"desc"}, })
        .Method("UpdateData", static_cast<MethodType<EngineS::Texture2DOpenGL, false, false, void, const byte *, u32, u32>>(&EngineS::Texture2DOpenGL::UpdateData), { {"data"},{"width"},{"height"}, })
        .Method("Apply", static_cast<MethodType<EngineS::Texture2DOpenGL, false, true, void, u32>>(&EngineS::Texture2DOpenGL::Apply), { {"index"}, })
        .Method("GetHandler", static_cast<MethodType<EngineS::Texture2DOpenGL, false, true, GLuint>>(&EngineS::Texture2DOpenGL::GetHandler), {  })
        .Field("_texture", &EngineS::Texture2DOpenGL::_texture)
        .Field("_internalFormat", &EngineS::Texture2DOpenGL::_internalFormat)
        .Field("_dataType", &EngineS::Texture2DOpenGL::_dataType)
        .Field("_imageFormat", &EngineS::Texture2DOpenGL::_imageFormat)
        .Field("_wrapS", &EngineS::Texture2DOpenGL::_wrapS)
        .Field("_wrapT", &EngineS::Texture2DOpenGL::_wrapT)
        .Field("_minFilter", &EngineS::Texture2DOpenGL::_minFilter)
        .Field("_magFilter", &EngineS::Texture2DOpenGL::_magFilter)
        .Get();

#include "Function/Transform2D.hpp"
const Type* EngineS::Transform2D::__es_type =
    Registration::Class<EngineS::Transform2D>("EngineS::Transform2D", Component::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::Transform2D, true, false, const Type *>>(&EngineS::Transform2D::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::Transform2D, false, false, const Type *>>(&EngineS::Transform2D::GetType), {  })
        .Method("MakeModelMatrix", static_cast<MethodType<EngineS::Transform2D, false, true, Matrix4x4>>(&EngineS::Transform2D::MakeModelMatrix), {  })
        .Method("Visit", static_cast<MethodType<EngineS::Transform2D, false, false, void, const Matrix4x4 &, VisitFunc>>(&EngineS::Transform2D::Visit), { {"parentModelMat"},{"func"}, })
        .Method("GetParent", static_cast<MethodType<EngineS::Transform2D, false, false, Transform2D *>>(&EngineS::Transform2D::GetParent), {  })
        .Method("SetParent", static_cast<MethodType<EngineS::Transform2D, false, false, void, Transform2D *>>(&EngineS::Transform2D::SetParent), { {"parent"}, })
        .Method("AddChild", static_cast<MethodType<EngineS::Transform2D, false, false, void, Transform2D *>>(&EngineS::Transform2D::AddChild), { {"child"}, })
        .Method("RemoveChild", static_cast<MethodType<EngineS::Transform2D, false, false, void, Transform2D *>>(&EngineS::Transform2D::RemoveChild), { {"child"}, })
        .Method("RemoveFromParent", static_cast<MethodType<EngineS::Transform2D, false, false, void>>(&EngineS::Transform2D::RemoveFromParent), {  })
        .Method("GetChildren", static_cast<MethodType<EngineS::Transform2D, false, false, std::unordered_set<Transform2D *> &>>(&EngineS::Transform2D::GetChildren), {  })
        .Field("position", &EngineS::Transform2D::position)
        .Field("scale", &EngineS::Transform2D::scale)
        .Field("rotation", &EngineS::Transform2D::rotation)
        .Field("_children", &EngineS::Transform2D::_children)
        .Field("_parent", &EngineS::Transform2D::_parent)
        .Get();

#include "Render/WindowSystem.hpp"
const Type* EngineS::WindowSystem::__es_type =
    Registration::Class<EngineS::WindowSystem>("EngineS::WindowSystem", Object::GetTypeStatic())
        .Method("GetTypeStatic", static_cast<MethodType<EngineS::WindowSystem, true, false, const Type *>>(&EngineS::WindowSystem::GetTypeStatic), {  })
        .Method("GetType", static_cast<MethodType<EngineS::WindowSystem, false, false, const Type *>>(&EngineS::WindowSystem::GetType), {  })
        .Method("Instance", static_cast<MethodType<EngineS::WindowSystem, true, false, WindowSystem *>>(&EngineS::WindowSystem::Instance), {  })
        .Method("Initialize", static_cast<MethodType<EngineS::WindowSystem, false, false, void>>(&EngineS::WindowSystem::Initialize), {  })
        .Method("PollEvents", static_cast<MethodType<EngineS::WindowSystem, false, true, void>>(&EngineS::WindowSystem::PollEvents), {  })
        .Method("SwapBuffers", static_cast<MethodType<EngineS::WindowSystem, false, true, void>>(&EngineS::WindowSystem::SwapBuffers), {  })
        .Method("ShouldClose", static_cast<MethodType<EngineS::WindowSystem, false, true, _Bool>>(&EngineS::WindowSystem::ShouldClose), {  })
        .Method("SetTitle", static_cast<MethodType<EngineS::WindowSystem, false, false, void, const std::string &>>(&EngineS::WindowSystem::SetTitle), { {"title"}, })
        .Method("SetWindowSize", static_cast<MethodType<EngineS::WindowSystem, false, false, void, u32, u32>>(&EngineS::WindowSystem::SetWindowSize), { {"width"},{"height"}, })
        .Method("GetWindow", static_cast<MethodType<EngineS::WindowSystem, false, true, GLFWwindow *>>(&EngineS::WindowSystem::GetWindow), {  })
        .Method("GetWindowSize", static_cast<MethodType<EngineS::WindowSystem, false, true, std::tuple<u32, u32>>>(&EngineS::WindowSystem::GetWindowSize), {  })
        .Method("RegisterOnResetFunc", static_cast<MethodType<EngineS::WindowSystem, false, false, void, OnResetFunc>>(&EngineS::WindowSystem::RegisterOnResetFunc), { {"func"}, })
        .Method("RegisterOnKeyFunc", static_cast<MethodType<EngineS::WindowSystem, false, false, void, OnKeyFunc>>(&EngineS::WindowSystem::RegisterOnKeyFunc), { {"func"}, })
        .Method("RegisterOnCharFunc", static_cast<MethodType<EngineS::WindowSystem, false, false, void, OnCharFunc>>(&EngineS::WindowSystem::RegisterOnCharFunc), { {"func"}, })
        .Method("RegisterOnCharModsFunc", static_cast<MethodType<EngineS::WindowSystem, false, false, void, OnCharModsFunc>>(&EngineS::WindowSystem::RegisterOnCharModsFunc), { {"func"}, })
        .Method("RegisterOnMouseButtonFunc", static_cast<MethodType<EngineS::WindowSystem, false, false, void, OnMouseButtonFunc>>(&EngineS::WindowSystem::RegisterOnMouseButtonFunc), { {"func"}, })
        .Method("RegisterOnCursorPosFunc", static_cast<MethodType<EngineS::WindowSystem, false, false, void, OnCursorPosFunc>>(&EngineS::WindowSystem::RegisterOnCursorPosFunc), { {"func"}, })
        .Method("RegisterOnCursorEnterFunc", static_cast<MethodType<EngineS::WindowSystem, false, false, void, OnCursorEnterFunc>>(&EngineS::WindowSystem::RegisterOnCursorEnterFunc), { {"func"}, })
        .Method("RegisterOnScrollFunc", static_cast<MethodType<EngineS::WindowSystem, false, false, void, OnScrollFunc>>(&EngineS::WindowSystem::RegisterOnScrollFunc), { {"func"}, })
        .Method("RegisterOnDropFunc", static_cast<MethodType<EngineS::WindowSystem, false, false, void, OnDropFunc>>(&EngineS::WindowSystem::RegisterOnDropFunc), { {"func"}, })
        .Method("RegisterOnWindowSizeFunc", static_cast<MethodType<EngineS::WindowSystem, false, false, void, OnWindowSizeFunc>>(&EngineS::WindowSystem::RegisterOnWindowSizeFunc), { {"func"}, })
        .Method("RegisterOnWindowCloseFunc", static_cast<MethodType<EngineS::WindowSystem, false, false, void, OnWindowCloseFunc>>(&EngineS::WindowSystem::RegisterOnWindowCloseFunc), { {"func"}, })
        .Method("OnReset", static_cast<MethodType<EngineS::WindowSystem, false, false, void>>(&EngineS::WindowSystem::OnReset), {  })
        .Method("OnKey", static_cast<MethodType<EngineS::WindowSystem, false, false, void, int, int, int, int>>(&EngineS::WindowSystem::OnKey), { {"key"},{"scanCode"},{"action"},{"mods"}, })
        .Method("OnChar", static_cast<MethodType<EngineS::WindowSystem, false, false, void, unsigned int>>(&EngineS::WindowSystem::OnChar), { {"codePoint"}, })
        .Method("OnCharMods", static_cast<MethodType<EngineS::WindowSystem, false, false, void, int, unsigned int>>(&EngineS::WindowSystem::OnCharMods), { {"codePoint"},{"mods"}, })
        .Method("OnMouseButton", static_cast<MethodType<EngineS::WindowSystem, false, false, void, int, int, int>>(&EngineS::WindowSystem::OnMouseButton), { {"button"},{"action"},{"mods"}, })
        .Method("OnCursorPos", static_cast<MethodType<EngineS::WindowSystem, false, false, void, double, double>>(&EngineS::WindowSystem::OnCursorPos), { {"xPos"},{"yPos"}, })
        .Method("OnCursorEnter", static_cast<MethodType<EngineS::WindowSystem, false, false, void, int>>(&EngineS::WindowSystem::OnCursorEnter), { {"entered"}, })
        .Method("OnScroll", static_cast<MethodType<EngineS::WindowSystem, false, false, void, double, double>>(&EngineS::WindowSystem::OnScroll), { {"xOffset"},{"yOffset"}, })
        .Method("OnDrop", static_cast<MethodType<EngineS::WindowSystem, false, false, void, int, const char **>>(&EngineS::WindowSystem::OnDrop), { {"count"},{"paths"}, })
        .Method("OnWindowSize", static_cast<MethodType<EngineS::WindowSystem, false, false, void, u32, u32>>(&EngineS::WindowSystem::OnWindowSize), { {"width"},{"height"}, })
        .Method("OnWindowClose", static_cast<MethodType<EngineS::WindowSystem, false, false, void>>(&EngineS::WindowSystem::OnWindowClose), {  })
        .Field("_window", &EngineS::WindowSystem::_window)
        .Field("_width", &EngineS::WindowSystem::_width)
        .Field("_height", &EngineS::WindowSystem::_height)
        .Field("_title", &EngineS::WindowSystem::_title)
        .Field("_onResetFuncs", &EngineS::WindowSystem::_onResetFuncs)
        .Field("_onKeyFuncs", &EngineS::WindowSystem::_onKeyFuncs)
        .Field("_onCharFuncs", &EngineS::WindowSystem::_onCharFuncs)
        .Field("_onCharModsFuncs", &EngineS::WindowSystem::_onCharModsFuncs)
        .Field("_onMouseButtonFuncs", &EngineS::WindowSystem::_onMouseButtonFuncs)
        .Field("_onCursorEnterFuncs", &EngineS::WindowSystem::_onCursorEnterFuncs)
        .Field("_onCursorPosFuncs", &EngineS::WindowSystem::_onCursorPosFuncs)
        .Field("_onScrollFuncs", &EngineS::WindowSystem::_onScrollFuncs)
        .Field("_onDropFuncs", &EngineS::WindowSystem::_onDropFuncs)
        .Field("_onWindowSizeFuncs", &EngineS::WindowSystem::_onWindowSizeFuncs)
        .Field("_onWindowCloseFuncs", &EngineS::WindowSystem::_onWindowCloseFuncs)
        .Get();


#include "Refl.hpp"

void EngineS::Registration::RegisterEngineObjects() {
    EngineS::Buffer::GetTypeStatic();
    EngineS::BufferOpenGL::GetTypeStatic();
    EngineS::Camera::GetTypeStatic();
    EngineS::Component::GetTypeStatic();
    EngineS::DrawList::GetTypeStatic();
    EngineS::DrawListOpenGL::GetTypeStatic();
    EngineS::Engine::GetTypeStatic();
    EngineS::Framebuffer::GetTypeStatic();
    EngineS::FramebufferOpenGL::GetTypeStatic();
    EngineS::GameObject::GetTypeStatic();
    EngineS::InputSystem::GetTypeStatic();
    EngineS::Logger::GetTypeStatic();
    EngineS::Material2D::GetTypeStatic();
    EngineS::Program::GetTypeStatic();
    EngineS::ProgramOpenGL::GetTypeStatic();
    EngineS::RenderPipeline::GetTypeStatic();
    EngineS::RenderPipelineOpenGL::GetTypeStatic();
    EngineS::RenderSystem::GetTypeStatic();
    EngineS::Renderer::GetTypeStatic();
    EngineS::Resource::GetTypeStatic();
    EngineS::ResourceManager::GetTypeStatic();
    EngineS::Scene::GetTypeStatic();
    EngineS::SceneManager::GetTypeStatic();
    EngineS::Shader::GetTypeStatic();
    EngineS::ShaderOpenGL::GetTypeStatic();
    EngineS::SpriteRenderer::GetTypeStatic();
    EngineS::Text::GetTypeStatic();
    EngineS::Texture2D::GetTypeStatic();
    EngineS::Texture2DOpenGL::GetTypeStatic();
    EngineS::Transform2D::GetTypeStatic();
    EngineS::WindowSystem::GetTypeStatic();
}